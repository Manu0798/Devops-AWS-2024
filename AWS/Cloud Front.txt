# What is Clould Front
-> Cloud front is a content delivery netwrok(CDN) provided by AWS. It helps deliver content such as images and videos, to users with low latency
and high data transfer speeds.
-> CDN will manages the both DNS query and Data copy
DNS query means To find the nearst data centers and regions
Data Copy means To copy the data in all data centers.

# What is the difference between region and Edge locations
-> Region
   -> All aws services will avaliable in regions like s3,Ec2,VPC
   -> In aws we have 30 regions and 96 availablity zones , Ecach availablity zones having 3 data centers
-> Edge locations
   -> Only cashing releated services will available in edge location
   -> All aws services will not available in edge locations
   -> We have 410 edge locations in our world
   -> We have 6 edge locations in india that is Delhi, Mumbai, Benguluru, Hyderabad, chennai, kolkata
   -> Each locations having 3 data centers
   -> suppose when you raise the request from Delhi. It will come from Delhi edge location when we using cloud front

# Running Notes
-> It means our cloud front will work like above. we have to create distribution.
-> When we create the distribution we have one input that input we call origin
-> cloudfront will support those origins S3, EC2, ELB, Mediacore package service
-> you can use cloudfront not only in AWS you can use outside of the AWS
-> You need to provide IP and DNS to use outside servers in cloudfront


# How to connect static templates website to cloudfront from s3 bucket
-> First you will download free stastic website by using below link
-> https://www.free-css.com/free-css-templates
-> Create one s3 bucket and upload some static website content
-> Enable static website option to bucket in properties
-> After go to clould front and click create distribution
-> select s3 bucket in origin domain
-> select Legacy access identities in origin access and create new OAI to give anyname
-> Click Yes, update the bucket policy in Bucket policy
-> click Redirect HTTP to HTTPS in Viewer protocol policy
-> Click Do not enable security protections
-> write index.html in Default root object - optional
-> click create distribution

# Do you want to get know more details you will go through below video
https://youtu.be/yhieOhvHz6Q?si=J0l3ztEjiKc5yPHr


# This is aslo same as like above 
# How to connect static templates website to cloudfront
-> You will create one s3 bucket and upload one free html template
-> Go to properties and enable the static website
-> Go to permission and unable the block public access
-> go the permission enable ACl and make all objects as public.
-> Another way to make as public go to edit bucket policy and click add statement and edit the file like below file
   {
	"Version": "2012-10-17",
	"Statement": [
		{
			"Sid": "Statement1",
			"Principal": "*",
			"Effect": "Allow",
			"Action": "s3:*",
			"Resource": "arn:aws:s3:::manoj-3058/*"
		}
	]
}

-> After complete the above steps you will go cloud front 
-> Click create cloud front and select the s3 bucket name
-> go to origin access 
-> click s3 bucket
-> give path name index.html
-> Click Origin access control settings [if you select this option only you can access over cloud front URL you cant access othet URLS)
-> Click create control setting and give some name and create
-> Click Do not enable security protections
-> Go settings and see
-> Create distribution 
-> After create copy the Policy. later go s3 bucket and go to bucket policy and delete the all previous policy and give this cloud front policy there
-> Go cloud front and copy the Distribution domain name and paste in browser along with path

-> If you want to see the partical vidoe you checkout below link
    https://youtu.be/hM1KOq5hD30?si=XnXaxw_WUC9tiBRX


How CDN Works
Caching Content: CDNs cache copies of your web application's assets, such as images, videos, stylesheets, JavaScript, and HTML pages, at various edge servers.
Serving Content Locally: When a user accesses your application, the CDN serves the cached content from the server closest to their geographic location. This reduces latency and speeds up loading time.




# How to deploy the static website with the help of S3 bucket and cloudfront
-> First you have to upload the repository source code into s3 bucket, We can upload using manually or using below command
    aws s3 sync . s3://bucket-stattic-08 --delete
-> We have to click permission and uncheck the Block all public access, we have to update below policy in Bucket policy to keep it public

{
	"Version": "2012-10-17",
	"Statement": [
		{
			"Sid": "Statement1",
			"Principal": "*",
			"Effect": "Allow",
			"Action": "s3:*",
			"Resource": "arn:aws:s3:::manoj-3058/*"
		}
	]
}

-> After update the policy, Go to properties and enable static website
-> later you will create the cloud front to follow the steps
-> go to origin access 
-> click s3 bucket
-> Click Origin access control settings [if you select this option only you can access over cloud front URL you cant access othet URLS)
-> Click create control setting and give some name and create
-> Click Do not enable security protections
-> Go settings and see
-> Give the index.html in Default root object - optional    
-> Create distribution 
-> After create copy the Policy. later go s3 bucket and go to bucket policy and delete the all previous policy and give this cloud front policy there
-> Go cloud front and copy the Distribution domain name and paste in browser

