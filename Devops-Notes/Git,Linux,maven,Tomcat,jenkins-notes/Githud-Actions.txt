# What is GitHub Actions
-> GitHub action is a CI/CD pipeline.
-> GitHub action platform to automate the developers workflow.

# We have two types of runners in GitHub actions
-> self-hosted runners
-> GitHub-hosted runners

# What is the difference between Self-hosted runners and GitHub-hosted runners
-> Self-hosted runner: Self-hosted runners are machines (physical, virtual, or in a container) that you manage and maintain yourself. This means you have full control over the environment and software installed on these runners.
-> GitHub-hosted runners are convenient for most use cases, especially for open source projects or smaller teams that do not require specialized environments.

# Advantages of GitHub Actions over Jenkins
-> Hosting: Jenkins is self-hosted, meaning it requires its own server to run, while GitHub Actions is hosted by      GitHub and runs directly in your GitHub repository.
-> User interface: Jenkins has a complex and sophisticated user interface, while GitHub Actions has a more streamlined and user-friendly interface that is better suited for simple to moderate automation tasks.
-> Cost: Jenkins can be expensive to run and maintain, especially for organizations with large and complex automation needs. GitHub Actions, on the other hand, is free for open-source projects and has a tiered pricing model for private repositories, making it more accessible to smaller organizations and individual developers.

# Advantages of Jenkins over GitHub Actions
Integration: Jenkins can integrate with a wide range of tools and services, but GitHub Actions is tightly integrated with the GitHub platform, making it easier to automate tasks related to your GitHub workflow.


# What is the difference between Gitlab, Jenkins and GitHub actions
-> GitLab: Integrated DevOps platform with version control, CI/CD pipelines, and project management.
-> Jenkins: Automation server with extensive plugin support for building, testing, and deploying software.
-> GitHub Actions: Native CI/CD and automation tool tightly integrated with GitHub repositories.

