# What is Daemon Set
-> DaemonSet is a Kubernetes feature that lets you run a Kubernetes pod on all cluster nodes that meet certain criteria
-> We create the daemon set for logs collections,monitoring and storage
-> we cant use daemon set for reqular pod creation
-> Scale up and scale down process not applicable in daemon set

# What is the difference betwenn regular deploymnent and Daemonset
-> Deployment means:- When we deploy the pod in kubernets pods will run the in nodes based on replica. If new node create in cluster pod wont add in that node.
-> DaemonSet means:- When we deploy the pod in kubernets pods will run in all the nodes. If new node create in cluster pod will add automatically in that new node.
-> To understand more about daemonset you will checkout below link
    https://youtu.be/FGJ5OeFItd4?si=W0OwUnRwKPgGTkFx

-> kubectl get ds   -> To see the daemon sets

Note: when kubernets cluster created kube proxy daemonset is created by default in kube-system namespace
-> kubectl get ds -A  --> To the daemonset in all namespaces
-> kubectl get pods -n kubesystem  --> To see the pods in kubesystem
-> Whenever we delete the daemonsets all pods are deleted
-> kubectl delete ds <name of daemonset>   -> To delete the daemon set
-> However if you do not want to delete the pods managed by daemonset you will use below command
      kubectl delete ds <name of daemonset> --cascade=false


# What is kube-proxy
-> kube proxy act as network proxy
-> Kube proxy will maintain network rules on pods
-> The network rules allow the network to communicate your pods from inside and outside of the cluster


apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: node-exporter
spec:
  selector:
    matchLabels:
      app: node-exporter
  template:
    metadata:
      labels:
        app: node-exporter
    spec:
      # nodeSelector:
      #   kubernetes.io/os: linux
      containers:
      - name: node-exporter
        image: prom/node-exporter:latest
        args:
          - --path.procfs=/host/proc
          - --path.sysfs=/host/sys
        ports:
        - name: metrics
          containerPort: 9100
        volumeMounts:
        - name: procfs
          mountPath: /host/proc
          readOnly: true
        - name: sysfs
          mountPath: /host/sys
          readOnly: true
      volumes:
      - name: procfs
        hostPath:
          path: /proc
      - name: sysfs
        hostPath:
          path: /sys
