# Install grafana 
-> https://grafana.com/grafana/download
-> sudo apt-get install -y adduser libfontconfig1 musl
-> wget https://dl.grafana.com/enterprise/release/grafana-enterprise_11.5.2_amd64.deb
-> sudo dpkg -i grafana-enterprise_11.5.2_amd64.deb
-> sudo /bin/systemctl daemon-reload
-> sudo /bin/systemctl enable grafana-server
-> sudo /bin/systemctl start grafana-server
-> After that copy the ip paste it in web browser along with port number 3000 



✅ Summary of Monitored Metrics for node exporter
# Category	Metrics Monitored
-> CPU	Usage, Load Average, Idle Time
-> Memory	Used, Free, Available Memory
-> Disk	Usage, Read/Write IOPS
-> Network	Bandwidth, Errors, Packets Dropped
-> System	Uptime, Running Processes, Blocked Processes

-> Queries related CPU
100 - (avg by (instance) (rate(node_cpu_seconds_total{mode="idle"}[5m])) * 100)
node_load1
node_load5
node_load15
100 - (rate(node_cpu_seconds_total{mode="idle"}[5m]) * 100)

-> Queries related memory
node_memory_MemTotal_bytes
node_memory_MemFree_bytes
100 * (1 - (node_memory_MemAvailable_bytes / node_memory_MemTotal_bytes))
100 - ((node_filesystem_avail_bytes{mountpoint="/"} * 100) / node_filesystem_size_bytes{mountpoint="/"})


-> Queries related Disk
rate(node_disk_reads_completed_total[5m])
rate(node_disk_writes_completed_total[5m])
rate(node_disk_read_bytes_total[5m])
rate(node_disk_written_bytes_total[5m])

-> Queries related Network
rate(node_network_receive_bytes_total{device="eth0"}[5m])
rate(node_network_transmit_bytes_total{device="eth0"}[5m])
rate(node_network_receive_errs_total[5m])
rate(node_network_transmit_errs_total[5m])
rate(node_network_receive_drop_total[5m])
rate(node_network_transmit_drop_total[5m])

-> Queries related System health
node_time_seconds - node_boot_time_seconds
node_procs_running
node_procs_blocked




# For Blackbox exporter
1️⃣ HTTP/HTTPS Endpoint Monitoring
Availability & Response Time (probe_success, probe_duration_seconds)
HTTP Status Codes (probe_http_status_code)
SSL Certificate Expiry & Validity (probe_ssl_earliest_cert_expiry)
Redirects & DNS Resolution Time (probe_http_redirects, probe_http_duration_seconds)

probe_success{module="http_2xx"}
(probe_ssl_earliest_cert_expiry - time()) / 86400
avg(probe_icmp_duration_seconds{phase="rtt"})
probe_success{module="tcp_connect"}
avg(probe_dns_lookup_time_seconds)


📌 How to Monitor These Application Metrics?
Metric	What It Means?	How to Monitor?
Latency	Response time of requests	Prometheus (Application metrics)
Traffic	Request rate (RPS), data transfer	Prometheus (HTTP request counters)
Errors	HTTP 4xx, 5xx errors	Prometheus + Loki (logs)
Saturation	Resource limits (CPU, memory, I/O)	Node Exporter + Prometheus
Logs	Application logs, errors, warnings	Loki + Promtail
Traces	End-to-end request tracking	Grafana Tempo (Tracing)


histogram_quantile(0.95, rate(http_request_duration_seconds_bucket[5m]))
sum(rate(http_requests_total[5m]))
rate(node_network_receive_bytes_total[5m])
sum(rate(http_requests_total{status=~"5.."}[5m]))
{job="my-app"} |= "ERROR"
100 - (avg by (instance) (rate(node_cpu_seconds_total{mode="idle"}[5m])) * 100)
(node_memory_MemTotal_bytes - node_memory_MemAvailable_bytes) / node_memory_MemTotal_bytes * 100

# loki
{job="my-app"} |= "WARN"
{job="nginx"} |= "500"


# Import Dash board numbers 
-> 1860   --> Node exporter
-> 7587   --> Balckbox exporter
-> 13041  --> Website
-> 13659  


1. Instance Down
Query:

promql
Copy
Edit
up == 0
Description: Alerts if an instance is down.

2. Website Down (Blackbox Exporter)
Query:

promql
Copy
Edit
probe_success == 0
Description: Alerts if the website is not responding to the probe request.

3. High Network Traffic
Query:

promql
Copy
Edit
rate(node_network_receive_bytes_total[5m]) > 100000000 OR rate(node_network_transmit_bytes_total[5m]) > 100000000
Description: Triggers an alert if network traffic exceeds 100MB in 5 minutes.

4. Host Out of Memory
Query:

promql
Copy
Edit
(node_memory_MemAvailable / node_memory_MemTotal * 100) < 25
Description: Alerts if available memory falls below 25%.

5. Host Out of Disk Space
Query:

promql
Copy
Edit
(node_filesystem_avail{mountpoint="/"} * 100) / node_filesystem_size{mountpoint="/"} < 50
Description: Triggers when root (/) disk has less than 50% available space.

6. High CPU Load
Query:

promql
Copy
Edit
(1 - avg by (instance) (rate(node_cpu_seconds_total{mode="idle"}[5m]))) * 100 > 80
Description: Alerts if CPU utilization exceeds 80%.

7. Service Unavailable
Query:

promql
Copy
Edit
up{job="node_exporter"} == 0
Description: Triggers when Node Exporter service is unavailable.

8. High Memory Usage
Query:

promql
Copy
Edit
(node_memory_Active / node_memory_MemTotal) * 100 > 90
Description: Alerts when memory usage exceeds 90%.

9. File System Almost Full
Query:

promql
Copy
Edit
(node_filesystem_avail / node_filesystem_size) * 100 < 10
Description: Alerts if free disk space is below 10%.

10. Docker Container Restarting Frequently
Query:

promql
Copy
Edit
increase(docker_container_restart_count[5m]) > 3
Description: Triggers when a Docker container restarts more than 3 times in 5 minutes.

11. Docker Container High CPU Usage
Query:

promql
Copy
Edit
(rate(docker_container_cpu_usage_seconds_total[5m]) * 100) > 80
Description: Alerts if Docker container CPU usage exceeds 80%.

12. Docker Container High Memory Usage
Query:

promql
Copy
Edit
(docker_container_mem_usage_bytes / docker_container_mem_limit_bytes) * 100 > 90
Description: Triggers when a container uses more than 90% of allocated memory.

13. Docker Disk Usage High
Query:

promql
Copy
Edit
(docker_data_dir_disk_used_bytes / docker_data_dir_disk_total_bytes) * 100 > 85
Description: Alerts if Docker disk usage exceeds 85%.

14. Docker Container Stopped
Query:

promql
Copy
Edit
count by (instance, name) (docker_container_last_seen{state!="running"}) > 0
Description: Triggers when a Docker container stops running.

15. SSL Certificate Expiring
Query:

promql
Copy
Edit
ssl_cert_expires_in < 30 * 24 * 60 * 60
Description: Alerts if an SSL certificate is expiring within 30 days.

16. SSL Certificate Expired
Query:

promql
Copy
Edit
ssl_cert_expires_in <= 0
Description: Triggers when an SSL certificate has expired.

17. High Application Latency
Query:

promql
Copy
Edit
histogram_quantile(0.99, sum by (instance, job) (rate(application_latency_seconds_bucket[5m]))) > 0.5
Description: Alerts if 99th percentile application latency is above 500ms.

18. Critical Application Latency
Query:

promql
Copy
Edit
histogram_quantile(0.99, sum by (instance, job) (rate(application_latency_seconds_bucket[5m]))) > 1
Description: Triggers when 99th percentile latency exceeds 1 second.

19. Saturation Alert
Query:

promql
Copy
Edit
(avg by (instance) (node_load1) / count by (instance) (node_cpu_seconds_total{mode="idle"})) * 100 > 80
Description:

Saturation refers to system resource exhaustion, typically CPU load compared to available cores.
This alert triggers if CPU load is greater than 80% of available cores.
