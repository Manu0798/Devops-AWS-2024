# Update the packages
-> sudo apt update && sudo apt upgrade -y
-> sudo apt update && sudo apt install -y net-tools
-> sudo apt install -y wget curl unzip apt-transport-https

# Install Node Exporter
-> wget https://github.com/prometheus/node_exporter/releases/download/v1.9.0/node_exporter-1.9.0.linux-amd64.tar.gz
-> tar -xvf node_exporter-1.9.0.linux-amd64.tar.gz
-> rm node_exporter-1.9.0.linux-amd64.tar.gz
-> sudo mkdir -p /opt/node_exporter
-> sudo mv /home/ubuntu/node_exporter-1.9.0.linux-amd64 /opt/node_exporter
-> sudo useradd --no-create-home --shell /bin/false node_exporter
-> sudo chown -R node_exporter:node_exporter /opt/node_exporter/
-> sudo chmod -R 755 /opt/node_exporter/
-> sudo vi /etc/systemd/system/node_exporter.service

[Unit]
Description=Node Exporter
After=network.target

[Service]
User=node_exporter
Group=node_exporter
Type=simple
ExecStart=/opt/node_exporter/node_exporter-1.9.0.linux-amd64/node_exporter

[Install]
WantedBy=multi-user.target

-> sudo systemctl daemon-reload
-> sudo systemctl enable node_exporter
-> sudo systemctl start node_exporter
-> ps aux | grep node_exporter
-> sudo netstat -tulnp | grep 9100


# Install Blackbox Exporter
-> wget https://github.com/prometheus/blackbox_exporter/releases/download/v0.26.0/blackbox_exporter-0.26.0.linux-amd64.tar.gz
-> tar -xvf blackbox_exporter-0.26.0.linux-amd64.tar.gz
-> rm blackbox_exporter-0.26.0.linux-amd64.tar.gz
-> sudo mkdir -p /opt/blackbox_exporter
-> sudo mv /home/ubuntu/blackbox_exporter-0.26.0.linux-amd64/ /opt/blackbox_exporter/
-> sudo useradd --no-create-home --shell /bin/false blackbox_exporter
-> sudo chown -R blackbox_exporter:blackbox_exporter /opt/blackbox_exporter
-> sudo chmod -R 755 /opt/blackbox_exporter/
-> sudo vi /etc/blackbox-config.yml

modules:
  http_2xx:
    prober: http
    timeout: 5s
    http:
      valid_http_versions: [ "HTTP/1.1", "HTTP/2" ]
      valid_status_codes: []  # Defaults to 2xx
      method: GET
      fail_if_ssl: false
      fail_if_not_ssl: false

  https_cert:
    prober: http
    timeout: 5s
    http:
      tls_config:
        insecure_skip_verify: false
      fail_if_ssl: false
      fail_if_not_ssl: true

  ping:
    prober: icmp
    timeout: 5s

-> sudo vi /etc/systemd/system/blackbox_exporter.service

[Unit]
Description=Blackbox Exporter
After=network.target

[Service]
User=blackbox_exporter
Group=blackbox_exporter
Type=simple
ExecStart=/opt/blackbox_exporter/blackbox_exporter-0.26.0.linux-amd64/blackbox_exporter  --config.file=/etc/blackbox-config.yml

[Install]
WantedBy=multi-user.target

-> sudo systemctl daemon-reload
-> sudo systemctl enable blackbox_exporter
-> sudo systemctl start blackbox_exporter
-> ps aux | grep blackbox_exporter
-> sudo netstat -tulnp | grep 9115



# Install Promethous
-> wget https://github.com/prometheus/prometheus/releases/download/v3.2.1/prometheus-3.2.1.linux-amd64.tar.gz
-> tar -xvf prometheus-3.2.1.linux-amd64.tar.gz
-> rm prometheus-3.2.1.linux-amd64.tar.gz
-> sudo mkdir -p /opt/prometheus
-> sudo mv /home/ubuntu/prometheus-3.2.1.linux-amd64 /opt/prometheus/
-> sudo useradd --no-create-home --shell /bin/false prometheus
-> sudo mkdir /var/lib/prometheus
-> sudo chown prometheus:prometheus /var/lib/prometheus
-> sudo chown -R prometheus:prometheus /opt/prometheus
-> sudo chmod -R 755 /opt/prometheus
-> sudo vi /opt/prometheus/prometheus-3.2.1.linux-amd64/prometheus.yml

global:
  scrape_interval: 15s
scrape_configs:
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']

-> sudo vi /etc/systemd/system/prometheus.service

[Unit]
Description=Prometheus
After=network.target

[Service]
User=prometheus
Group=prometheus
Type=simple
ExecStart=/opt/prometheus/prometheus-3.2.1.linux-amd64/prometheus --config.file=/opt/prometheus/prometheus-3.2.1.linux-amd64/prometheus.yml --storage.tsdb.path=/var/lib/prometheus

[Install]
WantedBy=multi-user.target

-> sudo systemctl daemon-reload
-> sudo systemctl enable prometheus
-> sudo systemctl start prometheus
-> sudo systemctl status prometheus
-> ps aux | grep prometheus
-> sudo netstat -tulnp | grep 9090


# Install Loki
-> wget https://github.com/grafana/loki/releases/download/v3.4.2/loki-linux-amd64.zip -O ~/loki-server.zip
-> unzip ~/loki-server.zip -d ~/loki-server
-> sudo mv ~/loki-server/loki-linux-amd64 /usr/local/bin/loki
-> sudo chmod +x /usr/local/bin/loki

-> loki --version

-> sudo vi /etc/loki-config.yml

auth_enabled: false

server:
  http_listen_port: 3100

common:
  path_prefix: /var/loki

ingester:
  lifecycler:
    address: 127.0.0.1
    ring:
      kvstore:
        store: inmemory
      replication_factor: 1
  chunk_idle_period: 5m
  chunk_retain_period: 30s

schema_config:
  configs:
    - from: 2022-06-01
      store: boltdb-shipper
      object_store: filesystem
      schema: v11
      index:
        prefix: index_
        period: 24h

storage_config:
  boltdb_shipper:
    active_index_directory: /var/loki/index
    cache_location: /var/loki/cache
  filesystem:
    directory: /var/loki/chunks  # ✅ Fixed misplaced directory

limits_config:
  reject_old_samples: true
  reject_old_samples_max_age: 168h
  allow_structured_metadata: false  # ✅ Fixes schema issue

compactor:
  working_directory: /var/loki/compactor  # ✅ Removed invalid `shared_store`

table_manager:
  retention_deletes_enabled: true
  retention_period: 168h

-> sudo vi /etc/systemd/system/loki.service

[Unit]
Description=Loki Log Aggregation System
After=network.target

[Service]
ExecStart=/usr/local/bin/loki -config.file=/etc/loki-config.yml
Restart=always
User=root

[Install]
WantedBy=multi-user.target

-> sudo systemctl daemon-reload
-> sudo systemctl enable loki
-> sudo systemctl start loki
-> sudo systemctl status loki
-> ps aux | grep loki
-> sudo netstat -tulnp | grep 3100


# Install Cloud watch exporter
-> sudo apt update && sudo apt install -y openjdk-17-jdk
-> java -version
-> wget https://github.com/prometheus/cloudwatch_exporter/releases/download/v0.16.0/cloudwatch_exporter-0.16.0-jar-with-dependencies.jar -O cloudwatch_exporter.jar
-> mv cloudwatch_exporter.jar /home/ubuntu/
-> sudo vi /etc/cloudwatch_exporter.yml

region: ap-south-1  # Change this to your AWS region
metrics:
  - aws_namespace: AWS/EC2
    aws_metric_name: CPUUtilization
    aws_dimensions: [InstanceId]
    aws_statistics: [Average]
  - aws_namespace: AWS/AppRunner
    aws_metric_name: RequestCount
    aws_dimensions: [ServiceName]
    aws_statistics: [Sum]
log_group_name:
  - /aws/apprunner/UAT-Backend-01/12ddc089d52a40d39b6be47313fd04f9/application
  - /aws/apprunner/UAT-Backend-01/12ddc089d52a40d39b6be47313fd04f9/service

-> sudo vi /etc/systemd/system/cloudwatch_exporter.service

[Unit]
Description=CloudWatch Exporter for Prometheus
After=network.target

[Service]
User=ubuntu
ExecStart=/usr/bin/java -jar /home/ubuntu/cloudwatch_exporter.jar 9106 /etc/cloudwatch_exporter.yml
Restart=always
RestartSec=5
SuccessExitStatus=143

[Install]
WantedBy=multi-user.target

-> sudo systemctl daemon-reload
-> sudo systemctl enable cloudwatch_exporter
-> sudo systemctl start cloudwatch_exporter
-> sudo systemctl status cloudwatch_exporter
-> curl http://localhost:9106/metrics


# Install promtail
-> wget https://github.com/grafana/loki/releases/latest/download/promtail-linux-amd64.zip -O ~/promtail.zip
-> sudo apt update && sudo apt install unzip -y
-> unzip ~/promtail.zip -d ~/promtail
-> sudo mv ~/promtail/promtail-linux-amd64 /usr/local/bin/promtail
-> sudo chmod +x /usr/local/bin/promtail
-> sudo touch /var/log/positions.yaml
-> sudo useradd -r -s /sbin/nologin promtail
-> sudo chown promtail:promtail /var/log/positions.yaml
-> sudo chmod 664 /var/log/positions.yaml
-> sudo chown promtail:promtail /var/log
-> sudo chmod 777 /var/log
-> promtail --version
-> sudo vi /etc/promtail-config.yml

server:
  http_listen_port: 9080
  grpc_listen_port: 0

positions:
  filename: /tmp/positions.yaml

clients:
  - url: http://localhost:3100/loki/api/v1/push

scrape_configs:
  - job_name: cloudwatch
    pipeline_stages:
      - json:
          expressions:
            level: level
            msg: message
    static_configs:
      - targets:
          - localhost
        labels:
          job: cloudwatch_logs
          __path__: /var/log/cloudwatch.log


-> sudo vi /etc/systemd/system/promtail.service

[Unit]
Description=Promtail
After=network.target

[Service]
Type=simple
ExecStart=/usr/local/bin/promtail -config.file=/etc/promtail-config.yml
Restart=always
User=root

[Install]
WantedBy=multi-user.target


-> sudo systemctl daemon-reload
-> sudo systemctl enable promtail
-> sudo systemctl start promtail




