# How to install java on amazon linux
sudo yum update
sudo wget https://download.java.net/java/GA/jdk13.0.1/cec27d702aa74d5a8630c65ae61e4305/9/GPL/openjdk-13.0.1_linux-x64_bin.tar.gz
sudo tar -xvf openjdk-13.0.1_linux-x64_bin.tar.gz
sudo mv jdk-13.0.1 /opt/
cd ~
cd /etc/profile.d/       	
ll
sudo vim java.sh
	JAVA_HOME='/opt/jdk-13.0.1'
	PATH="$JAVA_HOME/bin:$PATH"
	export PATH
sh java.sh
cd ~
source /etc/profile
java --version

     (or)

sudo yum update
sudo amazon-linux-extras install java-openjdk11 -y
sudo dnf install java-11-amazon-corretto -y
java --version
which java
whereis java
yum list installed | grep java
ls -al /usr/bin/java
ls -al /etc/alternatives/java  --> To see the java path

# How to install maven on amazon linux
First you need install java before you install maven (you will above java steps to install java)
sudo yum update
sudo wget https://mirrors.estointernet.in/apache/maven/maven-3/3.6.3/binaries/apache-maven-3.6.3-bin.tar.gz
sudo tar -xvf apache-maven-3.6.3-bin.tar.gz
sudo mv apache-maven-3.6.3 /opt/
cd /etc/profile.d/                                [we have six goals in maven
ll                                                   1) mvn clean
sudo vim maven.sh                                    2) mvn compile
 	M2_HOME='/opt/apache-maven-3.6.3'            3) mvn test
	PATH="$M2_HOME/bin:$PATH"                    4) mvn package
	export PATH                                  5) mvn install
sh maven.sh                                          6) mvn deploy
cd ~
source /etc/profile
mvn --version

# How to insatll jenkins on amazon linux
First you need install java before you install jenkins (you will above java steps to install java)
sudo yum update -y
cd /opt/
sudo wget -O /etc/yum.repos.d/jenkins.repo \
    https://pkg.jenkins.io/redhat-stable/jenkins.repo
sudo rpm --import https://pkg.jenkins.io/redhat-stable/jenkins.io-2023.key
sudo yum upgrade
sudo amazon-linux-extras install java-openjdk11 -y
sudo dnf install java-11-amazon-corretto -y                (You have to download maven in jenkins in configure)
sudo yum install jenkins -y                                (you will use this directory to see wheather is build or not
sudo systemctl enable jenkins                                 /var/lib/jenkins/workspace )
sudo systemctl start jenkins                         (To change the jenkins port number sudo vi /etc/sysconfig/jenkins
sudo systemctl status jenkins                          after change you do restart the jenkins) 
cat /var/lib/jenkins/secrets/initialAdminPassword   (If you forget the password to recover vi /var/lib/jenkins/config.xml
                                                                after change you do restart the jenkins) 
# How to install Tomcat
First you need install java before you install tomact (you will above java steps to install java)
you will get link by apache tomcat
sudo wget https://dlcdn.apache.org/tomcat/tomcat-9/v9.0.82/bin/apache-tomcat-9.0.82.tar.gz
sudo tar -xvf apache-tomcat-9.0.82.tar.gz
cd apache-tomcat-9.0.80
cd /bin
sudo chmod 775 /bin
sudo sh startup.sh
sudo vi webapps/manager/META_INFA/contex.xml      (If you want to deploy the code into tomact server you have to installed Deploy continer plugin in jenkins)
	allow ".*"                                (cd /conf/server.xml to see port number)
cd /conf                                            
sudo vi tomcat-user.xml
  <role rolename="manager-gui"/>
  <role rolename="admin-gui"/>
  <role rolename="manager-script"/>
  <user username="tomcat" password="tomact" roles="manager-gui"/>
  <user username="admin" password="admin" roles="manager-gui,admin-gui,manager-script"/>


# How to install Sonar Qube [you need 4gb RAM t2.medium)
First you need install java before you install sonarqube (you will above java steps to install java)
sudo wget https://binaries.sonarsource.com/Distribution/sonarqube/sonarqube-8.9.2.46101.zip
sudo unzip sonarqube-8.9.2.46101.zip
sudo mv sonarqube-8.9.2.46101 /opt/
Note:- Sonar Qube server will not run with root user so that you have to create another user
sudo useradd sonar
sudo passwd sonar
sudo vim /etc/sudoers (or) sudo visudo
  sonar   ALL=(ALL)       ALL
cd /opt
sudo chown -R sonar:sonar sonarqube-8.9.2.46101
su sonar
cd /sonarqube-8.9.2.46101/bin/linux-x86-64            (cd /conf/sonar.properties to sonarqube port number)
sh sonar.sh start

if you want to deploy the code into sonar-qube by using maven
you have to do some configurion in pom.xml file
you have to write below properties to remove that properties
    <sonar.host.url>http://13.49.68.245:9000/</sonar.host.url>  [change that URL with your URL
    <sonar.login>admin</sonar.login>                            [change that login with your login id
    <sonar.password>admin</sonar.password>                      [change that password with your password

   <sonar.host.url>http://13.49.68.245:9000/</sonar.host.url>           [change that URL with your URL
   <sonar.login>8b206219f3ea7d59555b48747c1b4eba54cd7c9b</sonar.login>  [change that token with your token

if you want to deploy the code into sonar-qube by using jenkins
you need to install sonarqube-scanner plugin
you have to create credentials to sonaqube in creadentials in jenkins
you have to configure sonarqube-server in jenkins in system configure
you have to install sonar-scanner in tools in jenkins

# How to get Email Notification in jenkins
First you have to install Email-extention plugin in jenkins
go to system configure and configure Email-extention and Email
To configure both email go to youtube like vides and see.
you have to select Editable Email notification in post build actions and give email id project recipient list and apply
we may get script due to click on pipelinesynx

https://youtu.be/jIh66SjCUp4?si=ZfGQ_GwPjuBzAHeF
https://youtu.be/uMue7lNk3ew?si=nzaJE3635h5lfvMB 

# How to set the Dev,Sit and Uat Environments
First you have to create 3 instance
You have to download java and tomcat in both servers by using above java and tomact commands
You need to install build pipeline plugin in jenkins



#How to install Docker
1.sudo yum update -y
2.sudo yum install docker -y
3.sudo service docker start
4.sudo chkconfig docker on
5.sudo usermod -aG docker $USER
6.docker --version
7.docker info
If it is not work you will exit from instance and again you will login




#How to install Kubernetes
Take 3 Ubuntu Instances (20.00)
 1-Master Node (t2.medium instance)
 2-Work Nodes  ((t2.micro instance)

Install below step-1 and step-2 commands in 3 instances
Step-1:- Installing Docker
    1  sudo apt-get update
    2  sudo apt-get install docker.io
    3  docker --version
    4  sudo usermod -aG docker $USER
    5  sudo systemctl start docker
    6  sudo systemctl enable docker
    7  sudo systemctl status docker

Step-2:- Installing Kubernetes
   1  sudo apt install curl
   2  curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add  --> Add GPG Kubernets key
   3  sudo apt-add-repository "deb http://apt.kubernetes.io/ kubernetes-xenial main"    --> Add the repository
   4  sudo apt-get install kubeadm kubelet kubectl kubernetes-cni
   5  sudo apt-mark hold kubeadm kubelet kubectl kubernetes-cni
   6  kubeadm version
   7  sudo swapoff -a       --> disabel the swap
   8  sudo systemctl daemon-reload
   9  sudo systemctl start kubelet
  10  sudo systemctl enable kubelet.service
  11  sudo systemctl status kubelet.service

Below Step-3 commands execute in only master node
Step-3:- Running and Deploying Kubernetes
    1  sudo kubeadm init
    2  mkdir -p $HOME/.kube
    3  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
    4  sudo chown $(id -u):$(id -g) $HOME/.kube/config
    5  kubectl get nodes
    6  kubeadm token create --print-join-command
Copy that token and past that token in worknodes using sudo  --> worknodes connect to masternode
    7  kubectl get nodes

Create the one ubuntu instance to install kubectl (20.00)
Step-4:- Install kubectl in above instance 
1 sudo apt-get update
2 curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
3 chmod +x kubectl
4 sudo mv kubectl /usr/local/bin/
5 kubectl version --client

How to connect Kubectl to the master node
1 mkdir ~/.kube         --> execute in kubectl
 Note: Take kube config file from master and it keep it here
2 cat ~/.kube/config    --> executive in master node and copy the that data
3 vi ~/.kube/config     --> past here that copy data
4 kubectl cluster-info  --> execute this command in kubectl  --> it showing wheather kubectl is connected to the master node or not
5 kubectl get nodes     --> execute in both kubectl and master to get pods are connected or not
6 sudo systemctl restart kubelet.service   --> if pods are not showing then you will execute this command in master

When you get status is Notready then we will below command
kubectl apply -f https://docs.projectcalico.org/manifests/calico.yaml

We have to follow below steps in worknodes also to get pods even in work nodes
1 mkdir ~/.kube         --> execute in kubectl
 Note: Take kube config file from master and it keep it here
2 cat ~/.kube/config    --> executive in master node and copy the that data
3 vi ~/.kube/config     --> past here that copy data
4 kubectl cluster-info  --> execute this command in kubectl  --> it showing wheather kubectl is connected to the master node or not
5 kubectl get nodes     --> execute in both kubectl and master to get pods are connected or not

#If you want to do auto-scalling you need to install metric server in master node
sudo yum install git -y                 
git --version
git clone https://github.com/ashokitschool/k8s_metrics_server
cd k8s_metrics_server/
cd deploy/
cd 1.8+/
kubectl apply -f .
kubectl get namespaces
kubectl get pods -n kube-system
kubectl top nodes  --> To get CPU memory

Do you want to check wheather autoscalling working or not
To increase the load on pods you will use below commands in duplicate
kubectl run -it loadgenerator --image=busybox
wget -q -O- http:my-app-service










#How install terraform
sudo yum install -y yum-utils
sudo yum-config-manager --add-repo https://rpm.releases.hashicorp.com/AmazonLinux/hashicorp.repo
sudo yum -y install terraform
terraform --version
terraform init
terraform fmt
terraform validate
terraform plan
terraform apply
terraform apply -auto-apporve
terraform destroy

#How to install Grafana
1  sudo yum update -y
2  sudo yum install -y fontconfig freetype-devel urw-fonts
3  sudo vi /etc/yum.repos.d/grafana.repo
[grafana]
name=grafana
baseurl=https://packages.grafana.com/oss/rpm
repo_gpgcheck=1
enabled=1
gpgcheck=1
gpgkey=https://packages.grafana.com/gpg.key
sslverify=1

4  sudo yum install -y grafana
5  sudo systemctl start grafana-server
6  sudo systemctl enable grafana-server
7  sudo systemctl status grafana-server
8  sudo systemctl is-enabled grafana-server
9  sudo systemctl enable grafana-server

#How to install influxdb
1) wget https://dl.influxdata.com/influxdb/releases/influxdb2-2.7.1.x86_64.rpm
2) sudo yum localinstall influxdb2-2.7.1.x86_64.rpm
3) sudo service influxdb start
4) sudo service influxdb status
5) cd /etc/default/influxdb2
6) cd /etc/default/
7) ll
8) sudo vi influxd
	ARG1="--http-bind-address :8087"
9) Edit the /lib/systemd/system/influxdb.service file as follows:
	ExecStart=/usr/bin/influxd $ARG1
11) wget https://dl.influxdata.com/influxdb/releases/influxdb2-client-2.3.0-linux-amd64.tar.gz
12) ll
13) tar xvzf influxdb2-client-2.3.0-linux-amd64.tar.gz
14) ll
15) cd influxdb2-client-2.3.0-linux-amd64
16) ll
17) pwd
18) cd ~
19) sudo cp /home/ec2-user/influxdb2-client-2.3.0-linux-amd64/influx /usr/local/bin/
20) influx version

#How to install AWSCLI
sudo yum update -y
sudo yum install python3-pip -y
sudo pip3 install awscli
aws --version
aws configure
aws sts get-caller-identity

#How to install KUBECTL
curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
chmod +x kubectl
sudo mv kubectl /usr/local/bin/
kubectl version --client


#Kubernet connect to kubectl 
aws eks --region ap-south-1 describe-cluster --name eks-1 --query cluster.status
aws eks --region ap-south-1 update-kubeconfig --name eks-1
kubectl get svc
	
#RDS details
sudo -i
yum update -y
yum install mariadb-server
systemctl enable mariadb
systemctl start mariadb

username: admin
password: Varma_3003
RDS Endpoint: demo-rds-database.cnxpob7pwepk.ap-south-1.rds.amazonaws.com

Command to connect 
mysql -h <paste-rds-endpoint-here> -P 3306 -u rduser -p

mysql -h demo-rds-database.cnxpob7pwepk.ap-south-1.rds.amazonaws.com -P 3306 -u rduser -p


# How to install Cloud Wacth agent commands
    1  sudo yum update -y
    2  sudo yum install httpd -y
    3  sudo service httpd start
    4  sudo service httpd status
    5  cd /var/www/html/
    6  ll
    7  sudo vi index.html
    8  /var/log/httpd/access_log
    9  /var/log/httpd/error_log
    8  sudo yum install amazon-cloudwatch-agent -y
    9  sudo /opt/aws/amazon-cloudwatch-agent/bin/amazon-cloudwatch-agent-ctl -a fetch-config -m ec2 -s -c ssm:AmazonCloudWatch-linux
   10  sudo mkdir /usr/share/collectd/
   11  sudo touch /usr/share/collectd/types.db
   12  ll /usr/share/collectd/types.db
   13  sudo /opt/aws/amazon-cloudwatch-agent/bin/amazon-cloudwatch-agent-ctl -a fetch-config -m ec2 -s -c ssm:AmazonCloudWatch-linux
   14  sudo /opt/aws/amazon-cloudwatch-agent/bin/amazon-cloudwatch-agent-ctl -m ec2 -a status

#How to install artifactory packages
--> Get the link from https://jfrog.com/community/open-source/
sudo wget https://releases.jfrog.io/artifactory/bintray-artifactory/org/artifactory/oss/jfrog-artifactory-oss/7.68.7/jfrog-artifactory-oss-7.68.7-linux.tar.gz
sudo tar -xvf jfrog-artifactory-oss-7.68.7-linux.tar.gz
cd artifactory-oss-7.68.7
cd app
cd bin
sudo sh artifactory.sh



#How to install nagios
sudo yum install httpd php gcc glibc glibc-common gd gd-devel make net-snmp
   74  sudo useradd nagios
   75  sudo groupadd nagcmd
   76  sudo usermod -a -G nagcmd nagios
   77  cd /tmp
   78  wget https://assets.nagios.com/downloads/nagioscore/releases/nagios-4.4.6.tar.gz
   79  tar -zxvf nagios-4.4.6.tar.gz
   80  ll
   81  cd nagios-4.4.6/
   82  ll
   83  ./configure --with-command-group=nagcmd
   84  make all
   85  sudo make install
   86  sudo make install-init
   87  sudo make install-daemoninit
   88  sudo make install-config
   89  sudo make install-commandmode
   90  sudo make install-exfoliation
   91  cd ..
   92  wget https://nagios-plugins.org/download/nagios-plugins-2.3.3.tar.gz
   93  tar -zxvf nagios-plugins-2.3.3.tar.gz
   94  cd nagios-plugins-2.3.3
   95  ./configure --with-nagios-user=nagios --with-nagios-group=nagios
   96  make
   97  sudo make install
   98  sudo vi /etc/httpd/conf.d/nagios.conf
   99  sudo htpasswd -c /usr/local/nagios/etc/htpasswd.users your_username
  100  sudo systemctl start httpd
  101  sudo systemctl start nagios
  102  sudo systemctl enable httpd
  103  sudo systemctl enable nagios
  104  cat /etc/passwd
  105  cd /usr/local/
  106  cd nagios/
  107  cd etc/
  108  ll
  109  vi htpasswd.users



















